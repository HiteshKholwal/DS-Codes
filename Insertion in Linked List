#include <iostream>
using namespace std;

class Node
{

public:
    int data;
    Node *next;

    Node(int data) // CONSTRUCTOR
    {
        this->data = data;
        this->next = NULL;
    }

};

void InsertAtPosition(Node *&head, Node *&tail, int position, int d)
{

    Node *temp = head;
    int count = 1;
    if (position == 1)
    {
        InsertAtHead(head, d);
        return;
    }
    while (count < position - 1)
    {
        temp = temp->next;
        count++;
    }
    if (temp->next == NULL)
    {
        InsertAtTail(tail, d);
        return;
    }

    Node *nodetoinsert = new Node(d);
    nodetoinsert->next = temp->next;
    temp->next = nodetoinsert;
}
void printLL(Node *&head)
{
    Node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

int main()
{
    // created a new node
    Node *node1 = new Node(10);
    // cout << node1->data << endl;
    // cout << node1->next << endl;

    // head pointed to node1
    Node *head = node1;
    // Tail pointed to node1
    Node *tail = node1;
    InsertAtPosition(head, tail, 4, 22);
    printLL(head);
    cout << "HEAD -> " << head->data << endl;
    cout << "TAIL -> " << tail->data << endl;

    printLL(head);
    cout << "HEAD -> " << head->data << endl;
    cout << "TAIL -> " << tail->data << endl;

    return 0;
}
